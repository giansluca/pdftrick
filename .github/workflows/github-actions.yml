name: pdftrick-native windows
on: [ push ]

jobs:
  test-mac:
    runs-on: macos-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Test
        run: mvn test -B

  test-windows:
    runs-on: windows-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Test
        run: mvn test -B

  create-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set release version
        id: version
        run: echo "::set-output name=RELEASE_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - name: Create Release
        uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: v${{ steps.version.outputs.RELEASE_VERSION }}
          tag_name: v${{ steps.version.outputs.RELEASE_VERSION }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_version: ${{ steps.version.outputs.RELEASE_VERSION }}

  release-mac:
    needs: create-release
    runs-on: macos-latest
    if: github.ref == 'refs/heads/master'
    env:
      RELEASE_VERSION: ${{ needs.create-release.outputs.release_version }}
    steps:
      - name: Upload mac artifact
        uses: actions/upload-release-asset@v1
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Test
        run: mvn test -B clean package -P mac

  release-windows:
    needs: create-release
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'
    env:
      RELEASE_VERSION: ${{ needs.create-release.outputs.release_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Test
        run: mvn test -B clean package -P win
